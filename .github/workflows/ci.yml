name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  test_and_deploy:
    name: "Test, Build & Push"
    strategy: 
      matrix:
        microservice: [{name: song-library, dir: song_library}, 
                        {name: singers, dir: singers}]
    runs-on: ubuntu-22.04
    permissions:
      id-token: write 
      contents: read 
    steps:
      - name: Checkout
        uses: actions/checkout@v3 
    
      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::919980474747:role/github-actions
          aws-region: us-west-2 

      - name: Setup Python 3.10 
        id: python_setup 
        if: github.event_name == 'pull_request'
        uses: actions/setup-python@v4 
        with:
          python-version: '3.10.6'
          architecture: 'x64'

      # - name: Install Python dependencies 
      #   id: python_dependencies
      #   working-directory: ./microservices/${{ matrix.microservice.dir }}/src
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.test.txt 

      - name: Run unit tests
        id: unit_tests
        working-directory: ./microservices/${{ matrix.microservice.dir }}/src
        run: |
          docker-compose up -d --build
          docker-compose exec web pytest .
          docker-compose down

      - name: login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1 

      - name: Build, tag and push to Amazon ECR
        id: build_and_push
        working-directory: ./microservices/${{ matrix.microservice.dir }}/src
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: karaoke-app-image-repos-dev-${{ matrix.microservice.name }}
          IMAGE_TAG: v1
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG